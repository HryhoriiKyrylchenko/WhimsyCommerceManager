using System.ComponentModel.DataAnnotations.Schema;
using System.ComponentModel.DataAnnotations;
using Whimsy_WebAPI.Models.DataModels.UserManagement;

namespace Whimsy_WebAPI.Models.DataModels.Analytics
{
    /// <summary>
    /// Represents analytics data for an external seller on the platform.
    /// </summary>
    [Table("SellerAnalytics")]
    public class SellerAnalytics
    {
        /// <summary>
        /// Gets or sets the unique identifier for the seller analytics entry.
        /// </summary>
        [Key]
        public int Id { get; set; }

        /// <summary>
        /// Gets or sets the identifier of the associated seller.
        /// </summary>
        [Required]
        public string SellerId { get; set; } = null!;

        /// <summary>
        /// Gets or sets the associated seller for which the analytics data is recorded.
        /// </summary>
        [ForeignKey(nameof(SellerId))]
        public virtual Seller Seller { get; set; } = null!;

        /// <summary>
        /// Gets or sets the total sales revenue generated by the seller.
        /// </summary>
        [Column(TypeName = "decimal(18,2)")]
        [Range(0.0, double.MaxValue, ErrorMessage = "Total revenue must be a non-negative value.")]
        public decimal TotalRevenue { get; set; }

        /// <summary>
        /// Gets or sets the number of units sold by the seller.
        /// </summary>
        [Range(0, int.MaxValue, ErrorMessage = "Units sold must be a non-negative number.")]
        public int UnitsSold { get; set; }

        /// <summary>
        /// Gets or sets the average rating received by the seller.
        /// </summary>
        [Range(0.0, 5.0, ErrorMessage = "Average rating must be between 0 and 5.")]
        public double AverageRating { get; set; }

        /// <summary>
        /// Gets or sets the total number of reviews received by the seller.
        /// </summary>
        [Range(0, int.MaxValue, ErrorMessage = "Review count must be a non-negative number.")]
        public int ReviewCount { get; set; }

        /// <summary>
        /// Gets or sets the date for which this seller analytics data applies (e.g., daily, monthly, yearly).
        /// </summary>
        [Required]
        public DateTime AnalysisDate { get; set; }

        /// <summary>
        /// Gets or sets additional data that may provide context to the seller's performance, such as notes on promotions.
        /// </summary>
        [MaxLength(1000)]
        public string? AdditionalData { get; set; }
    }
}
